version: "3.8"
services:
  nginx:
    build:
      context: .
      dockerfile: "Dockerfile.nginx"
    container_name: booking_nginx
    ports:
      - 80:80
      - 443:443
    links:
      - booking
      - flower

  db:
    image: postgres:15
    container_name: booking_db
    volumes:
      - postgresdata:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - 5432:5432

  redis:
    image: redis:7
    container_name: booking_redis

  booking:
    image: booking_app
    build:
      context: .
    container_name: booking_app
    env_file:
      - .env
    depends_on:
      - db
      - redis
    command: ["/booking/docker/app.sh"]
    # command: sh -c "alembic upgrade head && gunicorn app.main:app --workers 4 --worker-class uvicorn.workers.UvicornWorker --bind=0.0.0.0:8000"
    ports:
      - 7777:8000

  celery:
    image: booking_celery
    build:
      context: . # celery is library, it does not have an image, we take it from the main build
    container_name: booking_celery
    command: ["/booking/docker/celery.sh", "celery"]
    # command: sh -c "celery --app=app.tasks.celery:celery worker -l INFO"
    env_file:
      - .env
    depends_on:
      - redis

  flower:
    image: booking_flower
    build:
      context: . # flower is library, it does not have an image, we take it from the main build
    container_name: booking_flower
    command: ["/booking/docker/celery.sh", "flower"]
    # command: sh -c "celery --app=app.tasks.celery:celery flower"
    # When running through nginx, you must run the command below for js and css to work correctly
    # command: sh -c "celery --app=app.tasks.celery:celery flower --url_prefix=/flower"
    env_file:
      - .env
    depends_on:
      - redis
    ports:
      - 5555:5555

  prometheus:
    image: prom/prometheus:v2.43.0
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheusdata:/prometheus
    restart: unless-stopped
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana:9.4.7
    container_name: grafana
    volumes:
      - grafanadata:/var/lib/grafana
    restart: unless-stopped
    ports:
      - 3000:3000

volumes:
  postgresdata:
  grafanadata:
  prometheusdata: